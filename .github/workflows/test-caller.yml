name: Test Trigger Workflow

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      # This is to avoid rate limiting issues.
      max-parallel: 2
      matrix:
        change_type:
          - ModuleChanged
          - ModuleDeleted
          - ModuleAdded
          - ModulesAdded
          - EnvCommonChanged
          - EnvCommonDeleted
          - EnvCommonAdded
          - AccountRequested
          - TeamAccountsRequested
          - AccountAdded
          - TeamAccountsAdded
          - AccountChanged
          - PipelinesPermissionAdded
          - PipelinesPermissionChanged
          - PipelinesPermissionDeleted
          - PipelinesEnvCommonPermissionAdded
          - PipelinesEnvCommonPermissionChanged
          - PipelinesEnvCommonPermissionDeleted
        presign:
          - 'true'
          - 'false'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create fake pipelines binary
        if: matrix.presign == 'true'
        run: |
          sudo echo 'echo "fake token"' > /usr/local/bin/pipelines
          sudo chmod +x /usr/local/bin/pipelines

      - name: Trigger action.yml workflow
        uses: "./"
        with:
          account_id: "123"
          repo: pipelines-dispatch
          repo_owner: gruntwork-io
          branch: ${{ github.head_ref || github.ref_name }}
          working_directory: "."
          command: "command"
          args: "args"
          infra_pipelines_token: ${{ secrets.GITHUB_TOKEN }}
          infra_live_token: ${{ secrets.GITHUB_TOKEN }}
          change_type: ${{ matrix.change_type }}
          additional_data: |
            {
              "AccountName": "new_account_name",
              "ChildAccountId": "child_account_id",
              "TeamAccountNames": ["team_account_names"]
            }
          actor: "actor"
          presign_token: ${{ matrix.presign }}
          install_pipelines_cli: "false"
          assume_pipelines_auth_role: "false"
