name: TEST Apply SDLC Account Baselines

on:
  workflow_dispatch:
    inputs:
      distinct_id:
        description: "A distinct ID for this workflow run"
        required: true
        type: string
      branch:
        description: "The branch in infra-live-central in which to run the terragrunt command"
        required: true
        type: string
      management_account:
        description: "The AWS Account ID of the Control Tower Management Account"
        required: true
        type: string
      terragrunt_command:
        type: string
        description: "The terragrunt command to run"
        required: true
        default: "plan"
      infra_live_repo:
        type: string
        description: "The infrastructure live repo on which to run terragrunt"
        required: true
      team_account_data:
        type: string
        description: "JSON string representation of the team account data"
        required: true
      working_directory:
        description: "The folder path in which terragrunt will execute"
        required: true
        type: string
      presigned_caller_identity:
        description: "The presigned URL sent by the calling account"
        required: false
        type: string

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: echo distinct ID ${{ github.event.inputs.distinct_id }}
        env:
          DISTINCT_ID: ${{ github.event.inputs.distinct_id }}
        run: echo "$DISTINCT_ID"

      - name: Test Expected Inputs
        env:
          BRANCH: ${{ inputs.branch }}
          INFRA_LIVE_REPO: ${{ inputs.infra_live_repo }}
          WORKING_DIRECTORY: ${{ inputs.working_directory }}
          TERRAGRUNT_COMMAND: ${{ inputs.terragrunt_command }}
          MANAGEMENT_ACCOUNT: ${{ inputs.management_account }}
          TEAM_ACCOUNT_DATA: ${{ inputs.team_account_data }}
          PRESIGNED_CALLER_IDENTITY: ${{ inputs.presigned_caller_identity }}
        run: |
          # These verify the expected values sent by the workflow dispatch to this workflow in `infrastructure-pipelines`
          # When `pipelines-dispatch` is called with the values found in `test-caller.yml`.

          if [[ $MANAGEMENT_ACCOUNT != "123" ]]; then
            echo "Did not receive expected management account"
            exit 1
          fi

          if [[ -z $BRANCH ]]; then
            echo "Did not set branch"
            exit 1
          fi

          if [[ $INFRA_LIVE_REPO != "gruntwork-io/pipelines-dispatch" ]]; then
            echo "Did not receive expected infra live repo"
            exit 1
          fi

          if [[ $WORKING_DIRECTORY != "." ]]; then
            echo "Did not receive expected working directory"
            exit 1
          fi

          if [[ $TERRAGRUNT_COMMAND != "command args" ]]; then
            echo "Did not receive expected terragrunt command"
            exit 1
          fi

          if [[ $(jq -c -M <<< "$TEAM_ACCOUNT_DATA") != '{"AccountName":"new_account_name","ChildAccountId":"child_account_id","TeamAccountNames":"team_account_name_one,team_account_name_two"}' ]]; then
            echo "Did not receive expected team account data"
            exit 1
          fi

          if [[ -z ${PRESIGNED_CALLER_IDENTITY:-} ]]; then
            echo "PRESIGNED_CALLER_IDENTITY is not set, which is expected when `presign_token` is `true` in `pipelines-dispatch`"
            exit 0
          fi

          if [[ ${PRESIGNED_CALLER_IDENTITY} != "fake token" ]]; then
            echo "Did not receive expected presigned caller identity, which is expected when `presign_token` is `true` in `pipelines-dispatch`"
            exit 1
          fi
