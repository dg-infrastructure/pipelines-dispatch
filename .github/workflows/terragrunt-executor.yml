name: TEST Pipelines Execute
on:
  workflow_dispatch:
    inputs:
      distinct_id:
        description: "A distinct ID for this workflow run"
        required: true
        type: string
      branch:
        description: "The branch in the infrastructure-live repo in which to run the command"
        required: true
        type: string
      working_directory:
        description: "The folder path in which the command will run"
        required: true
        type: string
      account:
        description: "The AWS Account ID of the ultimate account we will take action on"
        required: true
        type: string
      terragrunt_command:
        type: string
        description: "The terragrunt command to run"
        required: true
        default: "plan"
      infra_live_repo:
        type: string
        description: "The infrastructure live repo on which to run terragrunt"
        required: true
      pipelines_change_type:
        type: choice
        description: The change type for the infra change, as detected by pipelines orchestrate
        required: true
        options:
          - ModuleChanged
          - ModuleDeleted
          - ModuleAdded
          - ModulesAdded
          - EnvCommonChanged
          - EnvCommonDeleted
          - EnvCommonAdded
          - AccountRequested
          - AccountAdded
          - AccountChanged
          - PipelinesPermissionAdded
          - PipelinesPermissionChanged
          - PipelinesPermissionDeleted
          - PipelinesEnvCommonPermissionAdded
          - PipelinesEnvCommonPermissionChanged
          - PipelinesEnvCommonPermissionDeleted
      child_account_id:
        description: "The AWS Account ID of the child account"
        required: false
        type: string
      presigned_caller_identity:
        description: "The presigned URL sent by the calling account"
        required: false
        type: string

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: echo distinct ID ${{ github.event.inputs.distinct_id }}
        env:
          DISTINCT_ID: ${{ github.event.inputs.distinct_id }}
        run: echo "$DISTINCT_ID"
      - name: Test Expected Inputs
        env:
          BRANCH: ${{ inputs.branch }}
          INFRA_LIVE_REPO: ${{ inputs.infra_live_repo }}
          WORKING_DIRECTORY: ${{ inputs.working_directory }}
          TERRAGRUNT_COMMAND: ${{ inputs.terragrunt_command }}
          ACCOUNT: ${{ inputs.account }}
          PIPELINES_CHANGE_TYPE: ${{ inputs.pipelines_change_type }}
          CHILD_ACCOUNT_ID: ${{ inputs.child_account_id }}
          PRESIGNED_CALLER_IDENTITY: ${{ inputs.presigned_caller_identity }}
        run: |
          # These verify the expected values sent by the workflow dispatch to this workflow in `infrastructure-pipelines`
          # When `pipelines-dispatch` is called with the values found in `test-caller.yml`.

          if [[ $ACCOUNT != "123" ]]; then
            echo "ACCOUNT is not set to expected value"
            exit 1
          fi

          if [[ -z $BRANCH ]]; then
            echo "BRANCH is not set"
            exit 1
          fi

          if [[ $INFRA_LIVE_REPO != "gruntwork-io/pipelines-dispatch" ]]; then
            echo "INFRA_LIVE_REPO is not set to expected value"
            exit 1
          fi

          if [[ $WORKING_DIRECTORY != "." ]]; then
            echo "WORKING_DIRECTORY is not set to expected value"
            exit 1
          fi

          if [[ $TERRAGRUNT_COMMAND != "command args" ]]; then
            echo "TERRAGRUNT_COMMAND is not set to expected value"
            exit 1
          fi

          if [[ -z $PIPELINES_CHANGE_TYPE ]]; then
            echo "PIPELINES_CHANGE_TYPE is not set"
            exit 1
          fi

          if [[ -z ${PRESIGNED_CALLER_IDENTITY:-} ]]; then
            echo "PRESIGNED_CALLER_IDENTITY is not set, which is expected when `presign_token` is `true` in `pipelines-dispatch`"
            exit 0
          fi

          if [[ ${PRESIGNED_CALLER_IDENTITY} != "fake token" ]]; then
            echo "Did not receive expected presigned caller identity, which is expected when `presign_token` is `true` in `pipelines-dispatch`"
            exit 1
          fi
